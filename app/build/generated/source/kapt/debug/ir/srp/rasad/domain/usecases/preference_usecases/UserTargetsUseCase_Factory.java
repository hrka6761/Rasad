// Generated by Dagger (https://dagger.dev).
package ir.srp.rasad.domain.usecases.preference_usecases;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import ir.srp.rasad.domain.repositories.LocalUserDataRepo;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class UserTargetsUseCase_Factory implements Factory<UserTargetsUseCase> {
  private final Provider<LocalUserDataRepo> localUserDataRepoProvider;

  public UserTargetsUseCase_Factory(Provider<LocalUserDataRepo> localUserDataRepoProvider) {
    this.localUserDataRepoProvider = localUserDataRepoProvider;
  }

  @Override
  public UserTargetsUseCase get() {
    return newInstance(localUserDataRepoProvider.get());
  }

  public static UserTargetsUseCase_Factory create(
      Provider<LocalUserDataRepo> localUserDataRepoProvider) {
    return new UserTargetsUseCase_Factory(localUserDataRepoProvider);
  }

  public static UserTargetsUseCase newInstance(LocalUserDataRepo localUserDataRepo) {
    return new UserTargetsUseCase(localUserDataRepo);
  }
}
